[ { "BlackBox" :
    { "name"      : "@Prelude.Foldable.Foldable$[Vect n].0.Prelude.Foldable.#!foldr"
    , "templateD"  :
"~SYM[0]_vfoldr : block
  type ~SYM[7] is array (natural range <>) of ~TYP[1];
  signal ~SYM[6] : ~TYP[2];
  signal ~SYM[1] : ~SYM[7](~SYM[6]'high downto 0);
begin
  ~SYM[1](0) <= ~ARG[1];
  ~SYM[6] <= ~ARG[2];

  ~SYM[2]_generate : for ~SYM[3] in 0 to ~SYM[6]'high generate
  begin
    ~SYM[4]_generate : if ~SYM[3] /= (~SYM[6]'high) generate
      ~INST 0
        ~OUTPUT <= ~SYM[1](~SYM[3]+1)~
        ~INPUT  <= ~SYM[6](~SYM[3])~
        ~INPUT  <= ~SYM[1](~SYM[3])~
      ~INST
    end generate;

    ~SYM[5]_generate : if ~SYM[3] = (~SYM[6]'high) generate
      ~INST 0
        ~OUTPUT <= ~RESULT~
        ~INPUT  <= ~SYM[6](~SYM[3])~
        ~INPUT  <= ~SYM[1](~SYM[3])~
      ~INST
    end generate;
  end generate;
end block;"
    }
  }
, { "BlackBox" :
    { "name"      : "Prelude.Vect.zipWith"
    , "templateD"  :
"~SYM[0]_vzipWith : block
  signal ~SYM[1] : ~TYP[1];
  signal ~SYM[2] : ~TYP[2];
begin
  ~SYM[1] <= ~ARG[1];
  ~SYM[2] <= ~ARG[2];

  ~SYM[3]_generate : for ~SYM[4] in ~RESULT'high downto 0 generate
  begin
    ~INST 0
      ~OUTPUT <= ~RESULT(~SYM[4])~
      ~INPUT  <= ~SYM[1](~SYM[4])~
      ~INPUT  <= ~SYM[2](~SYM[4])~
    ~INST
  end generate;
end block;"
    }
  }
, { "BlackBox" :
    { "name"      : "@Prelude.Functor.Functor$[Vect n].0.Prelude.Functor.#!map"
    , "templateD"  :
"~SYM[0]_vmap : block
  signal ~SYM[1] : ~TYP[1];
begin
  ~SYM[1] <= ~ARG[1];

  ~SYM[2]_vmap : for ~SYM[3] in ~RESULT'high downto 0 generate
  begin
    ~INST 0
      ~OUTPUT <= ~RESULT(~SYM[3])~
      ~INPUT  <= ~SYM[1](~SYM[3])~
    ~INST
  end generate;
end block;"
    }
  }
, { "BlackBox" :
    { "name"      : "Prelude.Vect.replicate"
    , "templateD" : "~RESULT <= ~TYPMO'(~RESULT'high downto 0 => ~ARG[0]);"
    }
  }
, { "BlackBox" :
    { "name"      : "Prelude.Vect.head"
    , "templateE" : "~ARG[0](~ARG[0]'high)"
    }
  }
, { "BlackBox" :
    { "name"      : "Prelude.Vect.init"
    , "templateE" : "~ARG[0](~ARG[0]'high downto 1)"
    }
  }
, { "BlackBox" :
    { "name"      : "CLaSH.Prelude.Vect.+>>"
    , "templateE" : "~ARG[0] & ~ARG[1](~ARG[1]'high downto 1)"
    }
  }
]
